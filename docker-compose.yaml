version: '3'

services:
  nestjs:
    build: ./nestjs
    ports:
      - "3000:3000"
      - "5555:5555"
    volumes:
      - ./nestjs:/home/node/app
    command: npm run dev

  nextjs:
    build: ./nextjs
    ports:
      - "3001:3000"
    volumes:
      - ./nextjs:/home/node/app
    command: npm run dev

  goapp:
    build: ./goapp
    volumes:
      - ./goapp:/app
    ports:
      - "8080:8080"
    command: go run ./cmd/freight/main.go

  db:
    image: bitnami/mongodb:5.0.17
    volumes:
      - mongodb_data:/bitnamo/mongodb
    environment:
      MONGODB_ROOT_PASSWORD: root
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: 123456
      MONGODB_DATABASE: nest

  redis:
    image: redis:7.0.8-alpine

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021

  mysql: 
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: routes
    ports:
      - 3306:3306
    volumes:
      - ./.docker/mysql:/var/lib/mysql

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./.docker/prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "4000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  mongodb_data:
    driver: local